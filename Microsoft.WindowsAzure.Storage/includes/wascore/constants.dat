// -----------------------------------------------------------------------------------------
// <copyright file="constants.dat" company="Microsoft">
//    Copyright 2013 Microsoft Corporation
//
//    Licensed under the Apache License, Version 2.0 (the "License")
//    you may not use this file except in compliance with the License.
//    You may obtain a copy of the License at
//      http://www.apache.org/licenses/LICENSE-2.0
//
//    Unless required by applicable law or agreed to in writing, software
//    distributed under the License is distributed on an "AS IS" BASIS,
//    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//    See the License for the specific language governing permissions and
//    limitations under the License.
// </copyright>
// -----------------------------------------------------------------------------------------

#ifdef _CONSTANTS
// double special values
DAT(double_not_a_number, _XPLATSTR("NaN"))
DAT(double_infinity, _XPLATSTR("Infinity"))
DAT(double_negative_infinity, _XPLATSTR("-Infinity"))

// service names
DAT(service_blob, _XPLATSTR("blob"))
DAT(service_table, _XPLATSTR("table"))
DAT(service_queue, _XPLATSTR("queue"))
DAT(service_file, _XPLATSTR("file"))

// uri query parameters
DAT(uri_query_timeout, _XPLATSTR("timeout"))
DAT(uri_query_resource_type, _XPLATSTR("restype"))
DAT(uri_query_snapshot, _XPLATSTR("snapshot"))
DAT(uri_query_version_id, _XPLATSTR("versionid"))
DAT(uri_query_prevsnapshot, _XPLATSTR("prevsnapshot"))
DAT(uri_query_component, _XPLATSTR("comp"))
DAT(uri_query_block_id, _XPLATSTR("blockid"))
DAT(uri_query_block_list_type, _XPLATSTR("blocklisttype"))
DAT(uri_query_prefix, _XPLATSTR("prefix"))
DAT(uri_query_delimiter, _XPLATSTR("delimiter"))
DAT(uri_query_marker, _XPLATSTR("marker"))
DAT(uri_query_max_results, _XPLATSTR("maxresults"))
DAT(uri_query_include, _XPLATSTR("include"))
DAT(uri_query_copy_id, _XPLATSTR("copyid"))

// SAS query parameters
DAT(uri_query_sas_start, _XPLATSTR("st"))
DAT(uri_query_sas_expiry, _XPLATSTR("se"))
DAT(uri_query_sas_resource, _XPLATSTR("sr"))
DAT(uri_query_sas_table_name, _XPLATSTR("tn"))
DAT(uri_query_sas_permissions, _XPLATSTR("sp"))
DAT(uri_query_sas_start_partition_key, _XPLATSTR("spk"))
DAT(uri_query_sas_start_row_key, _XPLATSTR("srk"))
DAT(uri_query_sas_end_partition_key, _XPLATSTR("epk"))
DAT(uri_query_sas_end_row_key, _XPLATSTR("erk"))
DAT(uri_query_sas_identifier, _XPLATSTR("si"))
DAT(uri_query_sas_version, _XPLATSTR("sv"))
DAT(uri_query_sas_signature, _XPLATSTR("sig"))
DAT(uri_query_sas_cache_control, _XPLATSTR("rscc"))
DAT(uri_query_sas_content_type, _XPLATSTR("rsct"))
DAT(uri_query_sas_content_encoding, _XPLATSTR("rsce"))
DAT(uri_query_sas_content_language, _XPLATSTR("rscl"))
DAT(uri_query_sas_content_disposition, _XPLATSTR("rscd"))
DAT(uri_query_sas_api_version, _XPLATSTR("api-version"))
DAT(uri_query_sas_services, _XPLATSTR("ss"))
DAT(uri_query_sas_resource_types, _XPLATSTR("srt"))
DAT(uri_query_sas_ip, _XPLATSTR("sip"))
DAT(uri_query_sas_protocol, _XPLATSTR("spr"))
DAT(uri_query_sas_skoid, _XPLATSTR("skoid"))
DAT(uri_query_sas_sktid, _XPLATSTR("sktid"))
DAT(uri_query_sas_skt, _XPLATSTR("skt"))
DAT(uri_query_sas_ske, _XPLATSTR("ske"))
DAT(uri_query_sas_sks, _XPLATSTR("sks"))
DAT(uri_query_sas_skv, _XPLATSTR("skv"))

// table query parameters
DAT(table_query_next_partition_key, _XPLATSTR("NextPartitionKey"))
DAT(table_query_next_row_key, _XPLATSTR("NextRowKey"))
DAT(table_query_next_table_name, _XPLATSTR("NextTableName"))

// queue query parameters
DAT(queue_query_next_marker, _XPLATSTR("marker"))

// resource types
DAT(resource_account, _XPLATSTR("account"))
DAT(resource_service, _XPLATSTR("service"))
DAT(resource_container, _XPLATSTR("container"))
DAT(resource_blob, _XPLATSTR("blob"))
DAT(resource_block_list_all, _XPLATSTR("all"))
DAT(resource_block_list_committed, _XPLATSTR("committed"))
DAT(resource_block_list_uncommitted, _XPLATSTR("uncommitted"))
DAT(resource_share, _XPLATSTR("share"))
DAT(resource_directory, _XPLATSTR("directory"))

// components
DAT(component_list, _XPLATSTR("list"))
DAT(component_stats, _XPLATSTR("stats"))
DAT(component_properties, _XPLATSTR("properties"))
DAT(component_metadata, _XPLATSTR("metadata"))
DAT(component_snapshot, _XPLATSTR("snapshot"))
DAT(component_snapshots, _XPLATSTR("snapshots"))
DAT(component_versions, _XPLATSTR("versions"))
DAT(component_uncommitted_blobs, _XPLATSTR("uncommittedblobs"))
DAT(component_lease, _XPLATSTR("lease"))
DAT(component_block, _XPLATSTR("block"))
DAT(component_block_list, _XPLATSTR("blocklist"))
DAT(component_page_list, _XPLATSTR("pagelist"))
DAT(component_page, _XPLATSTR("page"))
DAT(component_append_block, _XPLATSTR("appendblock"))
DAT(component_copy, _XPLATSTR("copy"))
DAT(component_acl, _XPLATSTR("acl"))
DAT(component_range_list, _XPLATSTR("rangelist"))
DAT(component_range, _XPLATSTR("range"))
DAT(component_incrementalcopy, _XPLATSTR("incrementalcopy"))
DAT(component_tier, _XPLATSTR("tier"))
DAT(component_file_permission, _XPLATSTR("filepermission"))
DAT(component_user_delegation_key, _XPLATSTR("userdelegationkey"))

// common resources
DAT(root_container, _XPLATSTR("$root"))
DAT(directory_delimiter, _XPLATSTR("/"))

// headers
DAT(http_version, _XPLATSTR("HTTP/1.1"))
DAT(header_content_disposition, _XPLATSTR("Content-Disposition"))
DAT(header_max_data_service_version, _XPLATSTR("MaxDataServiceVersion"))
DAT(header_prefer, _XPLATSTR("Prefer"))
DAT(header_content_transfer_encoding, _XPLATSTR("Content-Transfer-Encoding"))
DAT(header_content_id, _XPLATSTR("Content-ID"))
DAT(ms_header_prefix, _XPLATSTR("x-ms-"))
DAT(ms_header_date, _XPLATSTR("x-ms-date"))
DAT(ms_header_version, _XPLATSTR("x-ms-version"))
DAT(ms_header_blob_public_access, _XPLATSTR("x-ms-blob-public-access"))
DAT(ms_header_blob_type, _XPLATSTR("x-ms-blob-type"))
DAT(ms_header_blob_cache_control, _XPLATSTR("x-ms-blob-cache-control"))
DAT(ms_header_blob_content_disposition, _XPLATSTR("x-ms-blob-content-disposition"))
DAT(ms_header_blob_content_encoding, _XPLATSTR("x-ms-blob-content-encoding"))
DAT(ms_header_blob_content_language, _XPLATSTR("x-ms-blob-content-language"))
DAT(ms_header_blob_content_length, _XPLATSTR("x-ms-blob-content-length"))
DAT(ms_header_blob_content_md5, _XPLATSTR("x-ms-blob-content-md5"))
DAT(ms_header_blob_content_type, _XPLATSTR("x-ms-blob-content-type"))
DAT(ms_header_blob_sequence_number, _XPLATSTR("x-ms-blob-sequence-number"))
DAT(ms_header_sequence_number_action, _XPLATSTR("x-ms-sequence-number-action"))
DAT(ms_header_blob_condition_maxsize, _XPLATSTR("x-ms-blob-condition-maxsize"))
DAT(ms_header_blob_condition_appendpos, _XPLATSTR("x-ms-blob-condition-appendpos"))
DAT(ms_header_blob_append_offset, _XPLATSTR("x-ms-blob-append-offset"))
DAT(ms_header_blob_committed_block_count, _XPLATSTR("x-ms-blob-committed-block-count"))
DAT(ms_header_server_encrypted, _XPLATSTR("x-ms-server-encrypted"))
DAT(ms_header_copy_id, _XPLATSTR("x-ms-copy-id"))
DAT(ms_header_copy_completion_time, _XPLATSTR("x-ms-copy-completion-time"))
DAT(ms_header_copy_action, _XPLATSTR("x-ms-copy-action"))
DAT(ms_header_copy_status, _XPLATSTR("x-ms-copy-status"))
DAT(ms_header_copy_progress, _XPLATSTR("x-ms-copy-progress"))
DAT(ms_header_copy_status_description, _XPLATSTR("x-ms-copy-status-description"))
DAT(ms_header_copy_source, _XPLATSTR("x-ms-copy-source"))
DAT(ms_header_copy_ignore_readonly, _XPLATSTR("x-ms-copy-ignore-readonly"))
DAT(ms_header_delete_snapshots, _XPLATSTR("x-ms-delete-snapshots"))
DAT(ms_header_request_id, _XPLATSTR("x-ms-request-id"))
DAT(ms_header_request_server_encrypted, _XPLATSTR("x-ms-request-server-encrypted"))
DAT(ms_header_client_request_id, _XPLATSTR("x-ms-client-request-id"))
DAT(ms_header_range, _XPLATSTR("x-ms-range"))
DAT(ms_header_page_write, _XPLATSTR("x-ms-page-write"))
DAT(ms_header_range_get_content_md5, _XPLATSTR("x-ms-range-get-content-md5"))
DAT(ms_header_range_get_content_crc64, _XPLATSTR("x-ms-range-get-content-crc64"))
DAT(ms_header_lease_id, _XPLATSTR("x-ms-lease-id"))
DAT(ms_header_lease_action, _XPLATSTR("x-ms-lease-action"))
DAT(ms_header_lease_state, _XPLATSTR("x-ms-lease-state"))
DAT(ms_header_lease_status, _XPLATSTR("x-ms-lease-status"))
DAT(ms_header_lease_duration, _XPLATSTR("x-ms-lease-duration"))
DAT(ms_header_lease_time, _XPLATSTR("x-ms-lease-time"))
DAT(ms_header_lease_break_period, _XPLATSTR("x-ms-lease-break-period"))
DAT(ms_header_lease_proposed_id, _XPLATSTR("x-ms-proposed-lease-id"))
DAT(ms_header_metadata_prefix, _XPLATSTR("x-ms-meta-"))
DAT(ms_header_snapshot, _XPLATSTR("x-ms-snapshot"))
DAT(ms_header_if_sequence_number_le, _XPLATSTR("x-ms-if-sequence-number-le"))
DAT(ms_header_if_sequence_number_lt, _XPLATSTR("x-ms-if-sequence-number-lt"))
DAT(ms_header_if_sequence_number_eq, _XPLATSTR("x-ms-if-sequence-number-eq"))
DAT(ms_header_source_if_match, _XPLATSTR("x-ms-source-if-match"))
DAT(ms_header_source_if_none_match, _XPLATSTR("x-ms-source-if-none-match"))
DAT(ms_header_source_if_modified_since, _XPLATSTR("x-ms-source-if-modified-since"))
DAT(ms_header_source_if_unmodified_since, _XPLATSTR("x-ms-source-if-unmodified-since"))
DAT(ms_header_continuation_next_partition_key, _XPLATSTR("x-ms-continuation-NextPartitionKey"))
DAT(ms_header_continuation_next_row_key, _XPLATSTR("x-ms-continuation-NextRowKey"))
DAT(ms_header_continuation_next_table_name, _XPLATSTR("x-ms-continuation-NextTableName"))
DAT(ms_header_approximate_messages_count, _XPLATSTR("x-ms-approximate-messages-count"))
DAT(ms_header_pop_receipt, _XPLATSTR("x-ms-popreceipt"))
DAT(ms_header_time_next_visible, _XPLATSTR("x-ms-time-next-visible"))
DAT(ms_header_share_quota, _XPLATSTR("x-ms-share-quota"))
DAT(ms_header_content_md5, _XPLATSTR("x-ms-content-md5"))
DAT(ms_header_content_crc64, _XPLATSTR("x-ms-content-crc64"))
DAT(ms_header_incremental_copy, _XPLATSTR("x-ms-incremental-copy"))
DAT(ms_header_copy_destination_snapshot, _XPLATSTR("x-ms-copy-destination-snapshot"))
DAT(ms_header_access_tier, _XPLATSTR("x-ms-access-tier"))
DAT(ms_header_access_tier_inferred, _XPLATSTR("x-ms-access-tier-inferred"))
DAT(ms_header_archive_status, _XPLATSTR("x-ms-archive-status"))
DAT(ms_header_tier_change_time, _XPLATSTR("x-ms-access-tier-change-time"))
DAT(ms_header_sku_name, _XPLATSTR("x-ms-sku-name"))
DAT(ms_header_account_kind, _XPLATSTR("x-ms-account-kind"))
DAT(ms_header_content_type, _XPLATSTR("x-ms-content-type"))
DAT(ms_header_content_length, _XPLATSTR("x-ms-content-length"))
DAT(ms_header_content_encoding, _XPLATSTR("x-ms-content-encoding"))
DAT(ms_header_content_language, _XPLATSTR("x-ms-content-language"))
DAT(ms_header_cache_control, _XPLATSTR("x-ms-cache-control"))
DAT(ms_header_content_disposition, _XPLATSTR("x-ms-content-disposition"))
DAT(ms_header_file_permission, _XPLATSTR("x-ms-file-permission"))
DAT(ms_header_file_permission_key, _XPLATSTR("x-ms-file-permission-key"))
DAT(ms_header_file_permission_copy_mode, _XPLATSTR("x-ms-file-permission-copy-mode"))
DAT(ms_header_file_attributes, _XPLATSTR("x-ms-file-attributes"))
DAT(ms_header_file_creation_time, _XPLATSTR("x-ms-file-creation-time"))
DAT(ms_header_file_last_write_time, _XPLATSTR("x-ms-file-last-write-time"))
DAT(ms_header_file_change_time, _XPLATSTR("x-ms-file-change-time"))
DAT(ms_header_file_id, _XPLATSTR("x-ms-file-id"))
DAT(ms_header_file_parent_id, _XPLATSTR("x-ms-file-parent-id"))
DAT(ms_header_previous_snapshot_url, _XPLATSTR("x-ms-previous-snapshot-url"))
DAT(ms_header_encryption_key, _XPLATSTR("x-ms-encryption-key"))
DAT(ms_header_encryption_key_sha256, _XPLATSTR("x-ms-encryption-key-sha256"))
DAT(ms_header_encryption_algorithm, _XPLATSTR("x-ms-encryption-algorithm"))
DAT(ms_header_share_next_allowed_quota_downgrade_time, _XPLATSTR("x-ms-share-next-allowed-quota-downgrade-time"))
DAT(ms_header_share_provisioned_egress_mbps, _XPLATSTR("x-ms-share-provisioned-egress-mbps"))
DAT(ms_header_share_provisioned_ingress_mbps, _XPLATSTR("x-ms-share-provisioned-ingress-mbps"))
DAT(ms_header_share_provisioned_iops, _XPLATSTR("x-ms-share-provisioned-iops"))
DAT(ms_header_version_id, _XPLATSTR("x-ms-version-id"))

// header values
DAT(header_value_storage_version, _XPLATSTR("2019-12-12"))
DAT(header_value_true, _XPLATSTR("true"))
DAT(header_value_false, _XPLATSTR("false"))
DAT(header_value_locked, _XPLATSTR("locked"))
DAT(header_value_unlocked, _XPLATSTR("unlocked"))
DAT(header_value_copy_abort, _XPLATSTR("abort"))
DAT(header_value_copy_pending, _XPLATSTR("pending"))
DAT(header_value_copy_success, _XPLATSTR("success"))
DAT(header_value_copy_aborted, _XPLATSTR("aborted"))
DAT(header_value_copy_failed, _XPLATSTR("failed"))
DAT(header_value_lease_available, _XPLATSTR("available"))
DAT(header_value_lease_leased, _XPLATSTR("leased"))
DAT(header_value_lease_expired, _XPLATSTR("expired"))
DAT(header_value_lease_breaking, _XPLATSTR("breaking"))
DAT(header_value_lease_broken, _XPLATSTR("broken"))
DAT(header_value_lease_infinite, _XPLATSTR("infinite"))
DAT(header_value_lease_fixed, _XPLATSTR("fixed"))
DAT(header_value_lease_acquire, _XPLATSTR("acquire"))
DAT(header_value_lease_renew, _XPLATSTR("renew"))
DAT(header_value_lease_release, _XPLATSTR("release"))
DAT(header_value_lease_break, _XPLATSTR("break"))
DAT(header_value_lease_change, _XPLATSTR("change"))
DAT(header_value_range_prefix, _XPLATSTR("bytes="))
DAT(header_value_page_write_update, _XPLATSTR("Update"))
DAT(header_value_page_write_clear, _XPLATSTR("Clear"))
DAT(header_value_blob_type_block, _XPLATSTR("BlockBlob"))
DAT(header_value_blob_type_page, _XPLATSTR("PageBlob"))
DAT(header_value_blob_type_append, _XPLATSTR("AppendBlob"))
DAT(header_value_snapshots_include, _XPLATSTR("include"))
DAT(header_value_snapshots_only, _XPLATSTR("only"))
DAT(header_value_sequence_max, _XPLATSTR("max"))
DAT(header_value_sequence_update, _XPLATSTR("update"))
DAT(header_value_sequence_increment, _XPLATSTR("increment"))
DAT(header_value_accept_application_json_minimal_metadata, _XPLATSTR("application/json;odata=minimalmetadata"))
DAT(header_value_accept_application_json_full_metadata, _XPLATSTR("application/json;odata=fullmetadata"))
DAT(header_value_accept_application_json_no_metadata, _XPLATSTR("application/json;odata=nometadata"))
DAT(header_value_charset_utf8, _XPLATSTR("UTF-8"))
DAT(header_value_data_service_version, _XPLATSTR("3.0;Native"))
DAT(header_value_content_type_json, _XPLATSTR("application/json"))
DAT(header_value_content_type_utf8, _XPLATSTR("text/plain; charset=utf-8"))
DAT(header_value_content_type_mime_multipart_prefix, _XPLATSTR("multipart/mixed; boundary="))
DAT(header_value_content_type_http, _XPLATSTR("application/http"))
DAT(header_value_content_transfer_encoding_binary, _XPLATSTR("binary"))
DAT(header_value_access_tier_hot, _XPLATSTR("Hot"))
DAT(header_value_access_tier_cool, _XPLATSTR("Cool"))
DAT(header_value_access_tier_archive, _XPLATSTR("Archive"))
DAT(header_value_access_tier_unknown, _XPLATSTR("Unknown"))
DAT(header_value_access_tier_p4, _XPLATSTR("P4"))
DAT(header_value_access_tier_p6, _XPLATSTR("P6"))
DAT(header_value_access_tier_p10, _XPLATSTR("P10"))
DAT(header_value_access_tier_p20, _XPLATSTR("P20"))
DAT(header_value_access_tier_p30, _XPLATSTR("P30"))
DAT(header_value_access_tier_p40, _XPLATSTR("P40"))
DAT(header_value_access_tier_p50, _XPLATSTR("P50"))
DAT(header_value_access_tier_p60, _XPLATSTR("P60"))
DAT(header_value_archive_status_to_hot, _XPLATSTR("rehydrate-pending-to-hot"))
DAT(header_value_archive_status_to_cool, _XPLATSTR("rehydrate-pending-to-cool"))
DAT(header_value_file_property_preserve, _XPLATSTR("preserve"))
DAT(header_value_file_property_source, _XPLATSTR("source"))
DAT(header_value_file_permission_inherit, _XPLATSTR("inherit"))
DAT(header_value_file_permission_override, _XPLATSTR("override"))
DAT(header_value_file_time_now, _XPLATSTR("now"))
DAT(header_value_file_attribute_none, _XPLATSTR("None"))
DAT(header_value_file_attribute_readonly, _XPLATSTR("ReadOnly"))
DAT(header_value_file_attribute_hidden, _XPLATSTR("Hidden"))
DAT(header_value_file_attribute_system, _XPLATSTR("System"))
DAT(header_value_file_attribute_directory, _XPLATSTR("Directory"))
DAT(header_value_file_attribute_archive, _XPLATSTR("Archive"))
DAT(header_value_file_attribute_temporary, _XPLATSTR("Temporary"))
DAT(header_value_file_attribute_offline, _XPLATSTR("Offline"))
DAT(header_value_file_attribute_notcontentindexed, _XPLATSTR("NotContentIndexed"))
DAT(header_value_file_attribute_noscrubdata, _XPLATSTR("NoScrubData"))
DAT(header_value_file_attribute_delimiter, _XPLATSTR(" | "))
DAT(header_value_encryption_algorithm_aes256, _XPLATSTR("AES256"))

// xml strings
DAT(xml_last_modified, _XPLATSTR("Last-Modified"))
DAT(xml_etag, _XPLATSTR("Etag"))
DAT(xml_lease_status, _XPLATSTR("LeaseStatus"))
DAT(xml_lease_state, _XPLATSTR("LeaseState"))
DAT(xml_lease_duration, _XPLATSTR("LeaseDuration"))
DAT(xml_public_access, _XPLATSTR("PublicAccess"))
DAT(xml_content_length, _XPLATSTR("Content-Length"))
DAT(xml_content_disposition, _XPLATSTR("Content-Disposition"))
DAT(xml_content_type, _XPLATSTR("Content-Type"))
DAT(xml_content_encoding, _XPLATSTR("Content-Encoding"))
DAT(xml_content_language, _XPLATSTR("Content-Language"))
DAT(xml_content_md5, _XPLATSTR("Content-MD5"))
DAT(xml_cache_control, _XPLATSTR("Cache-Control"))
DAT(xml_blob_sequence_number, _XPLATSTR("x-ms-blob-sequence-number"))
DAT(xml_blob_type, _XPLATSTR("BlobType"))
DAT(xml_copy_id, _XPLATSTR("CopyId"))
DAT(xml_copy_status, _XPLATSTR("CopyStatus"))
DAT(xml_copy_source, _XPLATSTR("CopySource"))
DAT(xml_copy_progress, _XPLATSTR("CopyProgress"))
DAT(xml_copy_completion_time, _XPLATSTR("CopyCompletionTime"))
DAT(xml_copy_status_description, _XPLATSTR("CopyStatusDescription"))
DAT(xml_incremental_copy, _XPLATSTR("IncrementalCopy"))
DAT(xml_copy_destination_snapshot, _XPLATSTR("CopyDestinationSnapshot"))
DAT(xml_next_marker, _XPLATSTR("NextMarker"))
DAT(xml_containers, _XPLATSTR("Containers"))
DAT(xml_container, _XPLATSTR("Container"))
DAT(xml_blobs, _XPLATSTR("Blobs"))
DAT(xml_blob, _XPLATSTR("Blob"))
DAT(xml_blob_prefix, _XPLATSTR("BlobPrefix"))
DAT(xml_properties, _XPLATSTR("Properties"))
DAT(xml_metadata, _XPLATSTR("Metadata"))
DAT(xml_snapshot, _XPLATSTR("Snapshot"))
DAT(xml_version_id, _XPLATSTR("VersionId"))
DAT(xml_is_current_version, _XPLATSTR("IsCurrentVersion"))
DAT(xml_enumeration_results, _XPLATSTR("EnumerationResults"))
DAT(xml_service_endpoint, _XPLATSTR("ServiceEndpoint"))
DAT(xml_container_name, _XPLATSTR("ContainerName"))
DAT(xml_page_range, _XPLATSTR("PageRange"))
DAT(xml_clear_range, _XPLATSTR("ClearRange"))
DAT(xml_start, _XPLATSTR("Start"))
DAT(xml_end, _XPLATSTR("End"))
DAT(xml_committed_blocks, _XPLATSTR("CommittedBlocks"))
DAT(xml_uncommitted_blocks, _XPLATSTR("UncommittedBlocks"))
DAT(xml_committed, _XPLATSTR("Committed"))
DAT(xml_uncommitted, _XPLATSTR("Uncommitted"))
DAT(xml_block, _XPLATSTR("Block"))
DAT(xml_name, _XPLATSTR("Name"))
DAT(xml_size, _XPLATSTR("Size"))
DAT(xml_error_root, _XPLATSTR("Error"))
DAT(xml_error_root_table, _XPLATSTR("error"))
DAT(xml_code, _XPLATSTR("Code"))
DAT(xml_code_table, _XPLATSTR("code"))
DAT(xml_message, _XPLATSTR("Message"))
DAT(xml_message_table, _XPLATSTR("message"))
DAT(xml_innererror_table, _XPLATSTR("innererror"))
DAT(xml_block_list, _XPLATSTR("BlockList"))
DAT(xml_latest, _XPLATSTR("Latest"))
DAT(xml_signed_identifiers, _XPLATSTR("SignedIdentifiers"))
DAT(xml_signed_identifier, _XPLATSTR("SignedIdentifier"))
DAT(xml_signed_id, _XPLATSTR("Id"))
DAT(xml_access_policy, _XPLATSTR("AccessPolicy"))
DAT(xml_access_policy_start, _XPLATSTR("Start"))
DAT(xml_access_policy_expiry, _XPLATSTR("Expiry"))
DAT(xml_access_policy_permissions, _XPLATSTR("Permission"))
DAT(xml_service_properties, _XPLATSTR("StorageServiceProperties"))
DAT(xml_service_properties_version, _XPLATSTR("Version"))
DAT(xml_service_properties_enabled, _XPLATSTR("Enabled"))
DAT(xml_service_properties_logging, _XPLATSTR("Logging"))
DAT(xml_service_properties_delete, _XPLATSTR("Delete"))
DAT(xml_service_properties_read, _XPLATSTR("Read"))
DAT(xml_service_properties_write, _XPLATSTR("Write"))
DAT(xml_service_properties_retention, _XPLATSTR("RetentionPolicy"))
DAT(xml_service_properties_retention_days, _XPLATSTR("Days"))
DAT(xml_service_properties_hour_metrics, _XPLATSTR("HourMetrics"))
DAT(xml_service_properties_minute_metrics, _XPLATSTR("MinuteMetrics"))
DAT(xml_service_properties_include_apis, _XPLATSTR("IncludeAPIs"))
DAT(xml_service_properties_cors, _XPLATSTR("Cors"))
DAT(xml_service_properties_cors_rule, _XPLATSTR("CorsRule"))
DAT(xml_service_properties_allowed_origins, _XPLATSTR("AllowedOrigins"))
DAT(xml_service_properties_allowed_methods, _XPLATSTR("AllowedMethods"))
DAT(xml_service_properties_max_age, _XPLATSTR("MaxAgeInSeconds"))
DAT(xml_service_properties_exposed_headers, _XPLATSTR("ExposedHeaders"))
DAT(xml_service_properties_allowed_headers, _XPLATSTR("AllowedHeaders"))
DAT(xml_service_properties_default_service_version, _XPLATSTR("DefaultServiceVersion"))
DAT(xml_service_stats_geo_replication, _XPLATSTR("GeoReplication"))
DAT(xml_service_stats_geo_replication_status, _XPLATSTR("Status"))
DAT(xml_service_stats_geo_replication_status_live, _XPLATSTR("live"))
DAT(xml_service_stats_geo_replication_status_bootstrap, _XPLATSTR("bootstrap"))
DAT(xml_service_stats_geo_replication_last_sync_time, _XPLATSTR("LastSyncTime"))
DAT(xml_url, _XPLATSTR("Url"))
DAT(xml_quota, _XPLATSTR("Quota"))
DAT(xml_provisioned_iops, _XPLATSTR("ProvisionedIops"))
DAT(xml_provisioned_ingress_mbps, _XPLATSTR("ProvisionedIngressMBps"))
DAT(xml_provisioned_egress_mpbs, _XPLATSTR("ProvisionedEgressMBps"))
DAT(xml_next_allowed_quota_downgrade_time, _XPLATSTR("NextAllowedQuotaDowngradeTime"))
DAT(xml_range, _XPLATSTR("Range"))
DAT(xml_share, _XPLATSTR("Share"))
DAT(xml_shares, _XPLATSTR("Shares"))
DAT(xml_file_id, _XPLATSTR("Id"))
DAT(xml_access_tier, _XPLATSTR("AccessTier"))
DAT(xml_access_tier_inferred, _XPLATSTR("AccessTierInferred"))
DAT(xml_access_tier_change_time, _XPLATSTR("AccessTierChangeTime"))
DAT(xml_user_delegation_key, _XPLATSTR("UserDelegationKey"))
DAT(xml_user_delegation_key_signed_oid, _XPLATSTR("SignedOid"))
DAT(xml_user_delegation_key_signed_tid, _XPLATSTR("SignedTid"))
DAT(xml_user_delegation_key_signed_start, _XPLATSTR("SignedStart"))
DAT(xml_user_delegation_key_signed_expiry, _XPLATSTR("SignedExpiry"))
DAT(xml_user_delegation_key_signed_service, _XPLATSTR("SignedService"))
DAT(xml_user_delegation_key_signed_version, _XPLATSTR("SignedVersion"))
DAT(xml_user_delegation_key_value, _XPLATSTR("Value"))
DAT(xml_user_delegation_key_info, _XPLATSTR("KeyInfo"))
DAT(xml_user_delegation_key_start, _XPLATSTR("Start"))
DAT(xml_user_delegation_key_expiry, _XPLATSTR("Expiry"))

// json strings
DAT(json_file_permission, _XPLATSTR("permission"))

#define STR(x) #x
#define VER(x) _XPLATSTR("Azure-Storage/7.5.0 (Native; Windows; MSC_VER " STR(x) ")")
#if defined(_WIN32)
#if defined(_MSC_VER)
    #if _MSC_VER >= 1900
        DAT(header_value_user_agent, VER(_MSC_VER))
    #elif _MSC_VER >= 1800
        DAT(header_value_user_agent, _XPLATSTR("Azure-Storage/7.5.0 (Native; Windows; MSC_VER 18XX)"))
    #else
        DAT(header_value_user_agent, _XPLATSTR("Azure-Storage/7.5.0 (Native; Windows; MSC_VER < 1800)"))
    #endif
#else
    DAT(header_value_user_agent, _XPLATSTR("Azure-Storage/7.5.0 (Native; Windows)"))
#endif
#else
    DAT(header_value_user_agent, _XPLATSTR("Azure-Storage/7.5.0 (Native)"))
#endif

#endif // _CONSTANTS

#ifdef _RESOURCES
DAT(error_blob_type_mismatch, "Blob type of the blob reference doesn't match blob type of the blob.")
DAT(error_closed_stream, "Cannot access a closed stream.")
DAT(error_lease_id_on_source, "A lease condition cannot be specified on the source of a copy.")
DAT(error_incorrect_length, "Incorrect number of bytes received.")
DAT(error_xml_not_complete, "The XML parsed is not complete.")
DAT(error_blob_over_max_block_limit, "The total blocks required for this upload exceeds the maximum block limit. Please increase the block size if applicable and ensure the Blob size is not greater than the maximum Blob size limit.")
DAT(error_md5_mismatch, "Calculated MD5 does not match existing property.")
DAT(error_crc64_mismatch, "Calculated CRC64 does not match existing property.")
DAT(error_missing_md5, "MD5 does not exist. If you do not want to force validation, please disable use_transactional_md5.")
DAT(error_missing_crc64, "CRC64 does not exist. If you do not want to force validation, please disable use_transactional_crc64.")
DAT(error_sas_missing_credentials, "Cannot create Shared Access Signature unless Shared Key credentials are used.")
DAT(error_uds_missing_credentials, "Cannot create User Delegation SAS unless token credentials are used")
DAT(error_client_timeout, "The client could not finish the operation within specified timeout.")
DAT(error_cannot_modify_snapshot, "Cannot perform this operation on a blob representing a snapshot.")
DAT(error_page_blob_size_unknown, "The size of the page blob could not be determined, because a length argument is not provided and stream is not seekable or stream length exceeds the permitted length.")
DAT(error_file_size_unknown, "The size of the file could not be determined, because a length argument is not provided and stream is not seekable or stream length exceeds the permitted length.")
DAT(error_stream_short, "The requested number of bytes exceeds the length of the stream remaining from the specified position.")
DAT(error_stream_length, "The length of the stream exceeds the permitted length.")
DAT(error_stream_length_unknown, "The length of the stream could not be determined, because the stream is not seekable or its length exceeds the permitted length.")
DAT(error_unsupported_text_blob, "Only plain text with utf-8 encoding is supported.")
DAT(error_unsupported_text, "Only plain text with utf-8 encoding is supported.")
DAT(error_multiple_snapshots, "Cannot provide snapshot time as part of the address and as constructor parameter. Either pass in the address or use a different constructor.")
DAT(error_multiple_credentials, "Cannot provide credentials as part of the address and as constructor parameter. Either pass in the address or use a different constructor.")
DAT(error_uri_missing_location, "The Uri for the target storage location is not specified. Please consider changing the request's location mode.")
DAT(error_primary_only_command, "This operation can only be executed against the primary storage location.")
DAT(error_secondary_only_command, "This operation can only be executed against the secondary storage location.")
DAT(error_md5_not_possible, "MD5 cannot be calculated for an existing page blob or append blob because it would require reading the existing data. Please disable store_blob_content_md5.")
DAT(error_missing_params_for_sas, "Missing mandatory parameters for valid Shared Access Signature.")
DAT(error_md5_options_mismatch, "When uploading a blob in a single request, store_blob_content_md5 must be set to true if use_transactional_md5 is true, because the MD5 calculated for the transaction will be stored in the blob.")
DAT(error_storage_uri_empty, "Primary or secondary location URI must be supplied.")
DAT(error_storage_uri_mismatch, "Primary and secondary location URIs must point to the same resource.")

#if defined(_WIN32)
DAT(error_operation_canceled, "operation canceled")
#else
DAT(error_operation_canceled, "Operation canceled")
#endif

DAT(error_empty_batch_operation, "The batch operation cannot be empty.")
DAT(error_batch_size_not_match_response, "The received batch result size does not match the size of the batch operations sent to the server.")
DAT(error_batch_operation_partition_key_mismatch, "The batch operation cannot contain entities with different partition keys.")
DAT(error_batch_operation_retrieve_count, "The batch operation cannot contain more than one retrieve operation.")
DAT(error_batch_operation_retrieve_mix, "The batch operation cannot contain any other operations when it contains a retrieve operation.")
DAT(error_entity_property_not_binary, "The type of the entity property is not binary.")
DAT(error_entity_property_not_boolean, "The type of the entity property is not boolean.")
DAT(error_parse_boolean, "An error occurred parsing the boolean.")
DAT(error_parse_double, "An error occurred parsing the double.")
DAT(error_entity_property_not_datetime, "The type of the entity property is not date/time.")
DAT(error_parse_datetime, "An error occurred parsing the date/time.")
DAT(error_entity_property_not_double, "The type of the entity property is not double.")
DAT(error_entity_property_not_guid, "The type of the entity property is not GUID.")
DAT(error_entity_property_not_int32, "The type of the entity property is not 32-bit integer.")
DAT(error_parse_int32, "An error occurred parsing the 32-bit integer.")
DAT(error_entity_property_not_int64, "The type of the entity property is not 64-bit integer.")
DAT(error_entity_property_not_string, "The type of the entity property is not string.")

DAT(error_invalid_value_time_to_live, "The time to live cannot be zero or any negative number other than -1.")
DAT(error_negative_initial_visibility_timeout, "The initial visibility timeout cannot be negative.")
DAT(error_large_initial_visibility_timeout, "The initial visibility timeout cannot be greater than 604800.")
DAT(error_negative_visibility_timeout, "The visibility timeout cannot be negative.")
DAT(error_large_visibility_timeout, "The visibility timeout cannot be greater than 604800.")
DAT(error_large_message_count, "The message count cannot be greater than 32.")
DAT(error_empty_message_id, "The message ID cannot be empty.")
DAT(error_empty_message_pop_receipt, "The message pop receipt cannot be empty.")

DAT(error_create_uuid, "An error occurred creating the UUID.")
DAT(error_serialize_uuid, "An error occurred serializing the UUID.")
DAT(error_free_uuid, "An error occurred freeing the UUID string.")
DAT(error_parse_uuid, "An error occurred parsing the UUID.")

DAT(error_empty_metadata_value, "The metadata value cannot be empty or consist entirely of whitespace.")
DAT(error_empty_whitespace_metadata_name, "The metadata name cannot contain any whitespaces or be empty.")
DAT(error_hash_on_closed_streambuf, "Hash is calculated when the streambuf is closed.")
DAT(error_invalid_settings_form, "Settings must be of the form \"name=value\".")

DAT(error_precondition_failure_ignored, "Pre-condition failure on a retry is being ignored since the request should have succeeded in the first attempt.")
DAT(error_invalid_block_size, "Append block data should not exceed the maximum blob size condition value.")

DAT(error_invalid_ip_address, "Error when parsing IP address: IP address is invalid.")
DAT(error_ip_must_be_ipv4_in_sas, "When specifying an IP Address in a SAS token, it must be an IPv4 address.")
#endif // _RESOURCES
